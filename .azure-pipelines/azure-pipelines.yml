trigger:
- master  # Or your desired branch

pool:
  vmImage: 'ubuntu-latest'  # You can change this if you want to use another VM image

variables:
  # Optional: Specify the name of the web app to deploy
  azureSubscription: 'devops-bootcamp'  # Replace with your Azure service connection
  appName: 'python-web-tim'  # Replace with your actual Azure Web App name
  packagePath: '$(Build.ArtifactStagingDirectory)/drop/myapp.zip'  # Package location

steps:

# Step 1: Setup Python environment
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'  # Set this to your desired Python version
    addToPath: true

# Step 2: Install dependencies
- script: |
    python -m venv venv  # Create a virtual environment
    source venv/bin/activate  # Activate the virtual environment
    pip install -r requirements.txt  # Install dependencies from requirements.txt
  displayName: 'Install Python Dependencies'

# Step 3: Check for test files and run tests 
- script: |
    source venv/bin/activate
    if ls tests/* /dev/null 2>&1; then
        echo "Test files found, running tests..."
        python -m unittest discover -s . -p 'test_*.py'
    else
        echo "No test files found, skipping tests."
    fi
  displayName: 'Run Tests'
  failOnStderr: true  # Fail the build if there are errors in the test output

# Step 4: Create a deployment package
- script: |
    # Ensure the target directory exists
    mkdir -p $(Build.ArtifactStagingDirectory)/drop
    
    # Zip the project files, excluding unnecessary files like .git and .venv
    zip -r $(Build.ArtifactStagingDirectory)/drop/myapp.zip . -x "*.git*" -x "venv/*"
  displayName: 'Create Deployment Package'

# Step 5: Publish artifacts (the zip file containing the app)
- task: PublishBuildArtifacts@1
  inputs:
    artifactName: 'drop'  # Name of the artifact to be published
    publishLocation: 'Container'
  displayName: 'Publish Artifacts'

# Step 6: Deploy to Azure Web App
- task: AzureWebApp@1
  inputs:
    azureSubscription: $(azureSubscription)  # Use the Azure service connection
    appName: $(appName)  # Azure Web App name
    package: $(packagePath)  # Path to the zip file
    # appType: webAppLinux  # Assuming you're using Linux-based web hosting, otherwise change to webApp
  displayName: 'Deploy to Azure Web App'
